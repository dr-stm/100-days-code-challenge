# -*- coding: utf-8 -*-
"""Day 18

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rrHNlPbPbQIqFSazGKtBq4xIMEHgfJnK

# **CHALLENGE DAY 18**

Extend your solution to Exercise 115 so that it correctly handles uppercase letters and punctuation marks such as commas, periods, question marks and exclamation marks.

If an English word begins with an uppercase letter then its Pig Latin representation should also begin with an uppercase letter and the uppercase letter moved to the end of the word should be changed to lowercase.
For example, Computer should become Omputercay.

If a word ends in a punctuation mark then the punctuation mark should remain at the end of the word after the transformation has been performed.
For example, Science! should become Iencescay!.
"""

# CONTINUED FROM SOLUTION TO PREVIOUS DAY CHALLENGE (DAY 17)

#importing the string module for accessing the letters of the alphabet
import string

alphabet_list = list(string.ascii_lowercase)  #making a list of all alphabet letters
vowel = ["a", "e", "i", "o", "u"]       #the vowels
consonants = []   #initiating the list for consonants

#populating the consonants list using loop and conditionals
#makes the list by putting everythin in the alphabets list and taking away the vowels
for letter in alphabet_list:
  if letter not in vowel:
    consonants.append(letter)
    consonants    #updated consonant list

#initiating the pig_latin_word that will be generated in this program
pig_latin_word = ""

#asking user to enter their desired english word
user_input = input("Please input a word: ").strip()
english_word = user_input.lower() #a different string containing the input in all lowercase
                              # since the list of the vowels, consonants, and alphabets are all in lowercase

word_list = list(english_word)   #making a list of the word, all as a lowercase


#condition for word that ends with a punctuation mark
if word_list[-1].isalnum() is False:
  chr = word_list.pop(-1)     #pops out the punctuation mark as a variable

  #if word starts with a vowel
  if word_list[0] in vowel:
    for ele in word_list:       #rejoining list back as a string
      pig_latin_word += ele
    
    #print output
    if user_input[0].isupper():
      #output for words that start with uppercase
      print("\nYou have entered '{}' and the pig latin version is '{}way{}'."\
            .format(user_input, pig_latin_word.title(), chr))
    else:
      #output for words that start with lowercase
      print("\nYou have entered '{}' and the pig latin version is '{}way{}'."\
            .format(user_input, pig_latin_word, chr))

  #if word starts with consonant, including 'y'
  else:
    for letter in consonants:   #intiating loop for each item in the word, until 
      if english_word.startswith(letter):   #condition for the consonant program to begin
        
        while word_list[0] in consonants:   #while the first item in the list is still a consonant          
           if word_list[0] in consonants:    #if it's a consonant (including y as the first item in the original word)
            popped_item = word_list.pop(0)  #it pops out that item
            word_list.append(popped_item)   #and add it at the end of the list
            
            #preserving other any other y that is not the first letter in the word
            if word_list[0] == "y":
              break
              word_list

        #rejoining the final list as a single word again and updating the pig latin string
        for ele in word_list:
          pig_latin_word += ele
    
    #print output
    if user_input[0].isupper():
      #output for words that start with uppercase
      print("\nYou have entered '{}' and the pig latin version is '{}ay{}'."\
            .format(user_input, pig_latin_word.title(), chr))
    else:
      #output for words that start with lowercase
      print("\nYou have entered '{}' and the pig latin version is '{}ay{}'."\
            .format(user_input, pig_latin_word, chr))


#condition for word that does not end with a punctuation mark
else:

  #if word starts with a vowel
  if english_word[0] in vowel:
    pig_latin_word += english_word + "way"    #adding way to the end of word, for vowel beginners
    
    #print output
    if user_input[0].isupper():
      #output for words that start with uppercase
      print("\nYou have entered '{}' and the pig latin version is '{}'."\
            .format(user_input, pig_latin_word.title()))
    else:
      #output for words that start with lowercase
      print("\nYou have entered '{}' and the pig latin version is '{}'."\
            .format(user_input, pig_latin_word))


  #if word starts with consonant, including 'y'
  else:
    for letter in consonants:   #intiating loop for each item in the word, until 
      if english_word.startswith(letter):   #condition for the consonant program to begin
        while word_list[0] in consonants:   #while the first item in the list is still a consonant          
           if word_list[0] in consonants:    #if it's a consonant (including y as the first item in the original word)
            popped_item = word_list.pop(0)  #it pops out that item
            word_list.append(popped_item)   #and add it at the end of the list
            
            #preserving other any other y that is not the first letter in the word
            if word_list[0] == "y":
              break
              word_list

        #rejoining the final list as a single word again and updating the pig latin string
        for ele in word_list:
          pig_latin_word += ele
    
    #print output
    if user_input[0].isupper():
      #output for words that start with uppercase
      print("\nYou have entered '{}' and the pig latin version is '{}ay'."\
            .format(user_input, pig_latin_word.title()))
    else:
      #output for words that start with lowercase
      print("\nYou have entered '{}' and the pig latin version is '{}ay'."\
            .format(user_input, pig_latin_word))