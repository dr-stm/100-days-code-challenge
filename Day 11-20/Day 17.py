# -*- coding: utf-8 -*-
"""Day 17

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u6Msi2LoR1A2cqa0dvyoqSWPDjH4fpEE

# **CHALLENGE DAY 17**
"""

"""
Pig Latin is a language constructed by transforming English words.
While the origins of the language are unknown, it is mentioned in at least two documents 
from the nineteenth century, suggesting that it has existed for more than 100 years.

The following rules are used to translate English into Pig Latin:

• If the word begins with a consonant (including y), then all letters at the beginning of 
the word, up to the first vowel (excluding y), are removed and then added to the end
of the word, followed by ay. For example, computer becomes omputercay and think becomes inkthay.

• If the word begins with a vowel (not including y), then way is added to the end
of the word. For example, algorithm becomes algorithmway and office becomes officeway.

Write a program that reads a line of text from the user. Then your program should
translate the line into Pig Latin and display the result. You may assume that the string
entered by the user only contains lowercase letters and spaces.
"""

#importing the string module for accessing the letters of the alphabet
import string

alphabet_list = list(string.ascii_lowercase)  #making a list of all alphabet letters
vowel = ["a", "e", "i", "o", "u"]       #the vowels
consonants = []   #initiating the list for consonants

#populating the consonants list using loop and conditionals
#makes the list by putting everythin in the alphabets list and taking away the vowels
for letter in alphabet_list:
  if letter not in vowel:
    consonants.append(letter)
    consonants    #updated consonant list

#initiating the pig_latin_word that will be generated in this program
pig_latin_word = ""

#asking user to enter their desired english word
english_word = input("Please input a word: ").strip().lower()

#making sure that the word starts with an english letter, if not, an error note is returned
if english_word[0] not in alphabet_list:
  print("Please enter a valid word that starts with an alphabet")
else:

  #for valid entries

  #if word starts with a vowel
  if english_word[0] in vowel:
    pig_latin_word += english_word + "way"    #adding way to the end of word, for vowel beginners
    
    #print output
    print("\nYou have entered '{}' and the pig latin version is '{}'."\
          .format(english_word, pig_latin_word))


  #if word starts with consonant, including 'y'
  else:
    for letter in consonants:   #intiating loop for each item in the word, until 
      if english_word.startswith(letter):   #condition for the consonant program to begin
        word_list = list(english_word)   #making a list of the word

        while word_list[0] in consonants:   #while the first item in the list is still a consonant          

          if word_list[0] in consonants:    #if it's a consonant (including y as the first item in the original word)
            popped_item = word_list.pop(0)  #it pops out that item
            word_list.append(popped_item)   #and add it at the end of the list

            #preserving other any other y that is not the first letter in the word
            if word_list[0] == "y":
              break
              word_list

        #rejoining the final list as a single word again and updating the pig latin string
        for ele in word_list:
          pig_latin_word += ele
    
    #print output
    print("\nYou have entered '{}' and the pig latin version is '{}ay'."\
          .format(english_word, pig_latin_word))

