# -*- coding: utf-8 -*-
"""Day 21

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gnSnwWdySD9UFkXnhF1G5LjsT_YUDus

# **CHALLENGE DAY 21**
"""

"""
In this exercise, you will create a program that reads words from the user until
the user enters a blank line.
After the user enters a blank line your program should display each word 
entered by the user exactly once. The words should be displayed in
the same order that they were entered. For example, if the user enters:

first
second
first
third
second

then your program should display:
first
second
third
"""

#calling user to enter eords and hit enter button to end
user = input("Please enter a word (hit enter button to end): ")

#initiating the list output
user_list = []

#giving condition for user to continue entering and for list to be populated
while user != "":
  user_list.append(user)    #adding each entry to the list
  user = input("Please enter a word (hit enter button to end): ") #asking user to continue entering

#printing output
print("\n")
list(dict.fromkeys(user_list))    #using dictionary to eliminate duplicates from lists

"""
A proper divisor of a positive integer, n, is a positive integer less than n which divides
evenly into n. Write a function that computes all of the proper divisors of a positive
integer. The integer will be passed to the function as its only parameter. The function
will return a list containing all of the proper divisors as its only result. Complete
this exercise by writing a main program that demonstrates the function by reading
a value from the user and displaying the list of its proper divisors. Ensure that your
main program only runs when your solution has not been imported into another file.
"""

#defining function of proper divisors that takes an entered number as its only argument
def prop_div(user_num):
  proper_divisors = []      #initiating the list of the proper divisors
  for num in range(1,user_num):   #evaluating each integer less than the entered number
    if user_num % num == 0:     #condition for a number to be a proper divisor
      proper_divisors.append(num)   #adding a proper divisor to the output list
  return proper_divisors

#defining main function
def main():
  
  #using try/except to prevent the program from crashing
  try:
    user_num = int(input("Please enter a positive number: ")) #calling user to enter number
    
    #ensuring that only positive numbers are accepted
    if user_num <= 0:
      print("\nPlease enter a positive number.")
    
    else:
      proper_divisors = prop_div(user_num)    #activating the function and printing output
      print(f"\nThe proper_divisors of {user_num} is/are:")
      print(proper_divisors)
  except:
    print("\nPlease enter a valid positive number")
if __name__ == "__main__":    #activating the main function
  main()
